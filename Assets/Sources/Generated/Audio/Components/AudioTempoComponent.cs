//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AudioEntity {

    public TempoComponent tempo { get { return (TempoComponent)GetComponent(AudioComponentsLookup.Tempo); } }
    public bool hasTempo { get { return HasComponent(AudioComponentsLookup.Tempo); } }

    public void AddTempo(float newBpm) {
        var index = AudioComponentsLookup.Tempo;
        var component = CreateComponent<TempoComponent>(index);
        component.bpm = newBpm;
        AddComponent(index, component);
    }

    public void ReplaceTempo(float newBpm) {
        var index = AudioComponentsLookup.Tempo;
        var component = CreateComponent<TempoComponent>(index);
        component.bpm = newBpm;
        ReplaceComponent(index, component);
    }

    public void RemoveTempo() {
        RemoveComponent(AudioComponentsLookup.Tempo);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AudioMatcher {

    static Entitas.IMatcher<AudioEntity> _matcherTempo;

    public static Entitas.IMatcher<AudioEntity> Tempo {
        get {
            if (_matcherTempo == null) {
                var matcher = (Entitas.Matcher<AudioEntity>)Entitas.Matcher<AudioEntity>.AllOf(AudioComponentsLookup.Tempo);
                matcher.componentNames = AudioComponentsLookup.componentNames;
                _matcherTempo = matcher;
            }

            return _matcherTempo;
        }
    }
}
