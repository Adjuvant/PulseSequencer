//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AudioEntity {

    public OffsetComponent offset { get { return (OffsetComponent)GetComponent(AudioComponentsLookup.Offset); } }
    public bool hasOffset { get { return HasComponent(AudioComponentsLookup.Offset); } }

    public void AddOffset(double newValue) {
        var index = AudioComponentsLookup.Offset;
        var component = CreateComponent<OffsetComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceOffset(double newValue) {
        var index = AudioComponentsLookup.Offset;
        var component = CreateComponent<OffsetComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveOffset() {
        RemoveComponent(AudioComponentsLookup.Offset);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AudioMatcher {

    static Entitas.IMatcher<AudioEntity> _matcherOffset;

    public static Entitas.IMatcher<AudioEntity> Offset {
        get {
            if (_matcherOffset == null) {
                var matcher = (Entitas.Matcher<AudioEntity>)Entitas.Matcher<AudioEntity>.AllOf(AudioComponentsLookup.Offset);
                matcher.componentNames = AudioComponentsLookup.componentNames;
                _matcherOffset = matcher;
            }

            return _matcherOffset;
        }
    }
}
